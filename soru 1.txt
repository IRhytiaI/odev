#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void insertionSort(int* list, int size) {
    int i, key, j;
    for (i = 1; i < size; i++) {
        key = list[i];
        j = i - 1;

        while (j >= 0 && list[j] > key) {
            list[j + 1] = list[j];
            j = j - 1;
        }
        list[j + 1] = key;
    }
}

void selectionSort(int* list, int size) {
    int i, j, minIndex;
    for (i = 0; i < size - 1; i++) {
        minIndex = i;
        for (j = i + 1; j < size; j++)
            if (list[j] < list[minIndex])
                minIndex = j;

        int temp = list[minIndex];
        list[minIndex] = list[i];
        list[i] = temp;
    }
}

int main() {
    int* list = (int*)malloc(500 * sizeof(int));
    srand(time(0)); 

    for (int i = 0; i < 500; i++) {
        list[i] = rand() % 1001; 
    }

   
    clock_t insertionBaslangic = clock();
    insertionSort(list, 500);
    clock_t insertionBitis = clock();
    double insertionSuresi = ((double) (insertionBitis - insertionBaslangic)) / CLOCKS_PER_SEC;

    clock_t selectionBaslangic = clock();
    selectionSort(list, 500);
    clock_t selectionBitis = clock();
    double selectionSuresi = ((double) (selectionBitis - selectionBaslangic)) / CLOCKS_PER_SEC;

   
    printf("Birleştirme Sırala (Insertion Sort) sür: %f s\n", insertionSuresi);
    printf("Seçme Sırala (Selection Sort) sür: %f s\n", selectionSuresi);

    free(list); 

    return 0;
}
